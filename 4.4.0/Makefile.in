.PHONY: clean strip

CC = @CC@ @ARCH@ @LTO@ @STD@ -g
CFLAGS = @CPPFLAGS@ @GSL_CFLAGS@ @XML_CFLAGS@ @GLIB_CFLAGS@ @JSON_CFLAGS@ \
	@GTHREAD_CFLAGS@ @GTK4@ -DJBM_PRECISION=2 -pedantic -Wall -Wextra \
	-O3 -D_FORTIFY_SOURCE=2
LDFLAGS = @LDFLAGS@ @LIBS@ @GSL_LIBS@ @XML_LIBS@ @GLIB_LIBS@ @JSON_LIBS@ \
	@GTHREAD_LIBS@ -ljb-2 -ljbm-2 -ljbw-2 -ljbxml-2 -ljbjson-2

src = ./
bin = ./
obj = ./
toolsbin_o = $(obj)toolsbin.o
optimize_o = $(obj)optimize.o
input_o = $(obj)input.o
variable_o = $(obj)variable.o
experiment_o = $(obj)experiment.o
mpcotoolbin_o = $(obj)mpcotoolbin.o
tools_o = $(obj)tools.o
interface_o = $(obj)interface.o
mpcotool_o = $(obj)mpcotool.o
toolsbin_pgo = $(obj)toolsbin.pgo
optimize_pgo = $(obj)optimize.pgo
input_pgo = $(obj)input.pgo
variable_pgo = $(obj)variable.pgo
experiment_pgo = $(obj)experiment.pgo
mpcotoolbin_pgo = $(obj)mpcotoolbin.pgo
libgenetic = $(bin)libgenetic@SO@
libmpcotoolpgo = $(bin)libmpcotoolpgo@SO@
libmpcotool = $(bin)libmpcotool@SO@
SRC = tools.c experiment.c variable.c input.c optimize.c interface.c \
	mpcotool.c main.c
OBJLIB = $(mpcotoolbin_o) $(experiment_o) $(variable_o) $(input_o) \
	$(optimize_o) $(toolsbin_o)
OBJ = $(experiment_o) $(variable_o) $(input_o) $(optimize_o)
OBJBIN = $(mpcotoolbin_o) $(toolsbin_o) $(OBJ)
OBJGUI = $(mpcotool_o) $(interface_o) $(tools_o) $(OBJ) @ICON@
DEP = Makefile
DE = de/LC_MESSAGES/
ES = es/LC_MESSAGES/
FR = fr/LC_MESSAGES/
GB = en_GB/LC_MESSAGES/
T1 = ../tests/test1/
T2 = ../tests/test2/
T3 = ../tests/test3/
T4 = ../tests/test4/
T5 = ../tests/test5/
ACKLEY = ../tests/testAckley/
SPHERE = ../tests/testSphere/
BOOTH = ../tests/testBooth/
ROSENBROCK = ../tests/testRosenbrock/
EASOM = ../tests/testEasom/
BEALE = ../tests/testBeale/
TESTS = $(T1)simulator@EXE@ $(T1)evaluator@EXE@ \
	$(T2)simulator@EXE@ $(T2)evaluator@EXE@ \
	$(T3)simulator@EXE@ $(T3)evaluator@EXE@ \
	$(T4)simulator@EXE@ $(T5)simulator@EXE@ \
	$(ACKLEY)Ackley@EXE@ $(SPHERE)Sphere@EXE@ $(BOOTH)Booth@EXE@ \
	$(ROSENBROCK)Rosenbrock@EXE@ $(EASOM)Easom@EXE@ $(BEALE)Beale@EXE@
MDIR = ../manuals/
ADIR = ../article/
M1 = $(MDIR)user-manual.pdf
M2 = $(MDIR)manual-de-usuario.pdf
MANUALS = $(M1) $(M2) $(MDIR)reference-manual.pdf
ifeq (@PGO@, 1)
	PGOOBJLIB = $(mpcotoolbin_pgo) $(experiment_pgo) $(variable_pgo) \
		$(input_pgo) $(optimize_pgo) $(toolsbin_pgo)
ifeq (@CC@, clang)
	PGOGEN = -fprofile-instr-generate
	PGOUSE = -fprofile-instr-use=$(bin)mpcotool.profraw
	TESTSDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)mpcotool.profraw
	TOOLSBINDEP = $(TESTSDEP)
	OPTIMIZEDEP = $(TESTSDEP)
	INPUTDEP = $(TESTSDEP)
	VARIABLEDEP = $(TESTSDEP)
	EXPERIMENTDEP = $(TESTSDEP)
	MPCOTOOLBINDEP = $(TESTSDEP)
	MAINBINDEP = $(TESTSDEP)
	MCXML1_PREFIX = LLVM_PROFILE_FILE="mcxml-1.profdata"
	MCJSON_PREFIX = LLVM_PROFILE_FILE="mcjson.profdata"
	SW_PREFIX = LLVM_PROFILE_FILE="sw.profdata"
	OS_PREFIX = LLVM_PROFILE_FILE="os.profdata"
	GA_PREFIX = LLVM_PROFILE_FILE="ga.profdata"
	LLVM_MERGE = @LLVM_PROFDATA@ merge *.profdata -output mpcotool.profraw
else
	PGOGEN = -fprofile-generate
	PGOUSE = -fprofile-use -fprofile-correction
	TOOLSBINDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)toolsbin.gcda
	OPTIMIZEDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)optimize.gcda
	INPUTDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)input.gcda
	VARIABLEDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)variable.gcda
	EXPERIMENTDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)experiment.gcda
	MPCOTOOLBINDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)mpcotoolbin.gcda
	MAINBINDEP = $(bin)mpcotoolbinpgo@EXE@ $(bin)mainbin.gcda
endif
	PGOTESTS = $(T1)simulator@EXE@ $(T1)evaluator@EXE@ \
		$(T1)test-mc@WIN@.xml $(T1)test-mc@WIN@.json $(T1)test-sw@WIN@.xml \
		$(T1)test-os@WIN@.xml $(T1)test-ga@WIN@.xml
else
	TOOLSBINDEP = tools.c tools.h config.h $(DEP)
	OPTIMIZEDEP = experiment.c experiment.h tools.h config.h $(DEP)
	INPUTDEP = variable.c variable.h tools.h config.h $(DEP)
	VARIABLEDEP = input.c input.h variable.h experiment.h tools.h config.h \
		$(DEP)
	EXPERIMENTDEP = optimize.c optimize.h input.h variable.h experiment.h \
		tools.h config.h $(DEP)
	MPCOTOOLBINDEP = mpcotool.c mpcotool.h optimize.h input.h variable.h \
		experiment.h tools.h config.h $(DEP)
	MAINBINDEP = main.c mpcotool.h optimize.h input.h variable.h experiment.h \
		tools.h config.h $(DEP)
endif
CGEN = -c -fPIC -DJBW=1 $(CFLAGS) $(PGOGEN)
CUSE = -c -fPIC -DJBW=1 $(CFLAGS) $(PGOUSE)

all: $(bin) $(bin)mpcotoolbin@EXE@ \
	$(bin)@MPCOTOOL@@EXE@ \
	locales/$(DE)mpcotool.mo \
	locales/$(ES)mpcotool.mo \
	locales/$(FR)mpcotool.mo

$(bin):
	test -d $(bin) || mkdir -p $(bin)
	test -e $(bin)libgenetic.a || ln -sf ../genetic/libgenetic.a $(bin)

manuals: $(MANUALS)

tests: $(TESTS)

$(toolsbin_pgo): tools.c tools.h config.h $(DEP)
	$(CC) $(CGEN) tools.c -o $(toolsbin_pgo)

$(experiment_pgo): experiment.c experiment.h tools.h config.h $(DEP)
	$(CC) $(CGEN) experiment.c -o $(experiment_pgo)

$(variable_pgo): variable.c variable.h tools.h config.h $(DEP)
	$(CC) $(CGEN) variable.c -o $(variable_pgo)

$(input_pgo): input.c input.h variable.h experiment.h tools.h config.h $(DEP)
	$(CC) $(CGEN) input.c -o $(input_pgo)

$(optimize_pgo): optimize.c optimize.h input.h variable.h experiment.h tools.h \
	config.h $(DEP)
	$(CC) $(CGEN) optimize.c -o $(optimize_pgo)

$(mpcotoolbin_pgo): mpcotool.c mpcotool.h optimize.h input.h variable.h \
	experiment.h tools.h config.h $(DEP)
	$(CC) $(CGEN) mpcotool.c -o $(mpcotoolbin_pgo)

$(libmpcotoolpgo): $(PGOOBJLIB)
	$(CC) $(PGOGEN) -shared $(PGOOBJLIB) $(LDFLAGS) -L. -Wl,-rpath=. -lgenetic \
		-o $(libmpcotoolpgo)

$(bin)mainbin.pgo: main.c mpcotool.h optimize.h input.h variable.h \
	experiment.h tools.h config.h $(DEP)
	$(CC) -c $(CFLAGS) $(PGOGEN) main.c -o $(bin)mainbin.pgo

$(bin)mpcotoolbinpgo@EXE@: $(bin)mainbin.pgo $(libmpcotoolpgo) $(libgenetic) \
	$(PGOTESTS)
	$(CC) $(PGOGEN) $(bin)mainbin.pgo $(LDFLAGS) \
		-o $(bin)mpcotoolbinpgo@EXE@ -L$(bin) -Wl,-rpath=. -lmpcotoolpgo \
		-lgenetic
	$(MCXML1_PREFIX) $(bin)mpcotoolbinpgo -t 1 ../tests/test1/test-mc@WIN@.xml
	$(MCJSON_PREFIX) $(bin)mpcotoolbinpgo ../tests/test1/test-mc@WIN@.json
	$(SW_PREFIX) $(bin)mpcotoolbinpgo ../tests/test1/test-sw@WIN@.xml
	$(OS_PREFIX) $(bin)mpcotoolbinpgo ../tests/test1/test-os@WIN@.xml
	$(GA_PREFIX) $(bin)mpcotoolbinpgo ../tests/test1/test-ga@WIN@.xml
	$(LLVM_MERGE)

$(toolsbin_o): $(TOOLSBINDEP)
	$(CC) $(CUSE) tools.c -o $(toolsbin_o)

$(experiment_o): $(EXPERIMENTDEP)
	$(CC) $(CUSE) experiment.c -o $(experiment_o)

$(variable_o): $(VARIABLEDEP)
	$(CC) $(CUSE) variable.c -o $(variable_o)

$(input_o): $(INPUTDEP)
	$(CC) $(CUSE) input.c -o $(input_o)

$(optimize_o): $(OPTIMIZEDEP)
	$(CC) $(CUSE) optimize.c -o $(optimize_o)

$(mpcotoolbin_o): $(MPCOTOOLBINDEP)
	$(CC) $(CUSE) mpcotool.c -o $(mpcotoolbin_o)

$(libmpcotool): $(OBJLIB)
	$(CC) $(PGOUSE) -shared -DEXTERNAL_LIBRARY=1 $(OBJLIB) $(LDFLAGS) -L. \
		-Wl,-rpath=. -lgenetic -o $(libmpcotool)

$(bin)mainbin.o: $(MAINBINDEP)
	$(CC) -c $(CFLAGS) $(PGOUSE) main.c -o $(bin)mainbin.o

$(bin)mpcotoolbin@EXE@: $(bin)mainbin.o $(libmpcotool)
	$(CC) $(PGOUSE) $(bin)mainbin.o -o $(bin)mpcotoolbin@EXE@ \
		$(LDFLAGS) -L$(bin) -Wl,-rpath=. -lmpcotool -lgenetic

$(tools_o): tools.c tools.h config.h $(DEP)
	$(CC) -c $(CFLAGS) @FREETYPE_CFLAGS@ @GTK_CFLAGS@ -DHAVE_GTK=1 -DJBW=2 tools.c -o $(tools_o)

$(interface_o): interface.c interface.h optimize.h input.h variable.h \
	experiment.h tools.h config.h $(DEP)
	$(CC) -c $(CFLAGS) @FREETYPE_CFLAGS@ @GTK_CFLAGS@ -DHAVE_GTK=1 -DJBW=2 interface.c -o $(interface_o)

$(mpcotool_o): mpcotool.c mpcotool.h interface.h optimize.h input.h variable.h \
	experiment.h tools.h config.h $(DEP)
	$(CC) -c $(CFLAGS) @FREETYPE_CFLAGS@ @GTK_CFLAGS@ -DHAVE_GTK=1 -DJBW=2 mpcotool.c -o $(mpcotool_o)

$(bin)main.o: main.c mpcotool.h optimize.h input.h variable.h experiment.h \
	tools.h config.h $(DEP)
	$(CC) -c $(CFLAGS) @FREETYPE_CFLAGS@ @GTK_CFLAGS@ -DHAVE_GTK=1 -DJBW=2 main.c -o $(bin)main.o

$(bin)@MPCOTOOL@@EXE@: $(bin)main.o $(libmpcotool) $(OBJGUI) @ICON@
	$(CC) $(bin)main.o $(OBJGUI) -L$(bin) -Wl,-rpath=. -lmpcotool \
		-lgenetic $(LDFLAGS) @GTK_LIBS@ @FREETYPE_LIBS@ -o $(bin)@MPCOTOOL@@EXE@

clean:
	cd $(bin); rm *.o *pgo *.gcda *@SO@ mpcotoolbin @MPCOTOOL@@EXE@

strip:
	make
	strip $(bin)mpcotoolbin@EXE@ $(libmpcotool) $(bin)@MPCOTOOL@@EXE@

locales/mpcotool.pot: $(SRC) Makefile
	@gnu@xgettext -k_ -d mpcotool -o locales/mpcotool.pot --from-code=UTF-8 $(SRC)

locales/$(DE)mpcotool.po: locales/mpcotool.pot
	test -d locales/$(DE) || mkdir -p locales/$(DE)
	test -f locales/$(DE)mpcotool.po || \
		msginit -l de -o locales/$(DE)mpcotool.po -i locales/mpcotool.pot \
		--no-translator
	msgmerge -U locales/$(DE)mpcotool.po locales/mpcotool.pot
	vim -p locales/$(DE)mpcotool.po
	touch locales/$(DE)mpcotool.po

locales/$(DE)mpcotool.mo: locales/$(DE)mpcotool.po locales/mpcotool.pot
	@gnu@msgfmt -c -v -o locales/$(DE)mpcotool.mo locales/$(DE)mpcotool.po

locales/$(ES)mpcotool.po: locales/mpcotool.pot
	test -d locales/$(ES) || mkdir -p locales/$(ES)
	test -f locales/$(ES)mpcotool.po || \
		msginit -l es -o locales/$(ES)mpcotool.po -i locales/mpcotool.pot \
		--no-translator
	msgmerge -U locales/$(ES)mpcotool.po locales/mpcotool.pot
	vim -p locales/$(ES)mpcotool.po
	touch locales/$(ES)mpcotool.po

locales/$(ES)mpcotool.mo: locales/$(ES)mpcotool.po locales/mpcotool.pot
	@gnu@msgfmt -c -v -o locales/$(ES)mpcotool.mo locales/$(ES)mpcotool.po

locales/$(FR)mpcotool.po: locales/mpcotool.pot
	test -d locales/$(FR) || mkdir -p locales/$(FR)
	test -f locales/$(FR)mpcotool.po || \
		msginit -l fr -o locales/$(FR)mpcotool.po -i locales/mpcotool.pot \
		--no-translator
	msgmerge -U locales/$(FR)mpcotool.po locales/mpcotool.pot
	vim -p locales/$(FR)mpcotool.po
	touch locales/$(FR)mpcotool.po

locales/$(FR)mpcotool.mo: locales/$(FR)mpcotool.po locales/mpcotool.pot
	@gnu@msgfmt -c -v -o locales/$(FR)mpcotool.mo locales/$(FR)mpcotool.po

$(T1)simulator@EXE@: $(T1)simulator.c $(T1)Makefile
	cd $(T1); make

$(T1)evaluator@EXE@: $(T1)evaluator.c $(T1)Makefile
	cd $(T1); make

$(T2)simulator@EXE@: $(T2)simulator.c $(T2)Makefile
	cd $(T2); make

$(T2)evaluator@EXE@: $(T2)evaluator.c $(T2)Makefile
	cd $(T2); make

$(T3)simulator@EXE@: $(T3)simulator.c $(T3)Makefile
	cd $(T3); make

$(T3)evaluator@EXE@: $(T3)evaluator.c $(T3)Makefile
	cd $(T3); make

$(T4)simulator@EXE@: $(T4)simulator.c $(T4)Makefile
	cd $(T4); make

$(T5)simulator@EXE@: $(T5)simulator.c $(T5)Makefile
	cd $(T5); make

$(ACKLEY)Ackley@EXE@: $(ACKLEY)Ackley.c $(ACKLEY)Makefile
	cd $(ACKLEY); make

$(SPHERE)Sphere@EXE@: $(SPHERE)Sphere.c $(SPHERE)Makefile
	cd $(SPHERE); make

$(BOOTH)Booth@EXE@: $(BOOTH)Booth.c $(BOOTH)Makefile
	cd $(BOOTH); make

$(ROSENBROCK)Rosenbrock@EXE@: $(ROSENBROCK)Rosenbrock.c $(ROSENBROCK)Makefile
	cd $(ROSENBROCK); make

$(EASOM)Easom@EXE@: $(EASOM)Easom.c $(EASOM)Makefile
	cd $(EASOM); make

$(BEALE)Beale@EXE@: $(BEALE)Beale.c $(BEALE)Makefile
	cd $(BEALE); make

@ICON@: mpcotool.rc mpcotool.ico
	@WINDRES@ mpcotool.rc -o @ICON@

$(M1): $(MDIR)user-manual.tex $(MDIR)bib.bib \
	$(MDIR)mpcotool-en.eps $(MDIR)result-en.eps Makefile
	cd $(MDIR); latex user-manual; bibtex user-manual; latex user-manual; \
		latex user-manual; dvipdf user-manual

$(M2): $(MDIR)manual-de-usuario.tex $(MDIR)bib.bib \
	$(MDIR)mpcotool-es.eps Makefile
	cd $(MDIR); latex manual-de-usuario; bibtex manual-de-usuario; \
		latex manual-de-usuario; latex manual-de-usuario; \
		dvipdf manual-de-usuario

$(MDIR)reference-manual.pdf: $(SRC) README.md Doxyfile
	doxygen
	cd latex; @SED@ -i 's/∞//g' *.tex; make; \
		mv refman.pdf ../$(MDIR)reference-manual.pdf

BIN = @PREFIX@/bin/
DLL = $(BIN)libatk-1.0-0.dll\
	$(BIN)libbz2-1.dll\
	$(BIN)libcairo-2.dll\
	$(BIN)libcairo-gobject-2.dll\
	$(BIN)libcroco-0.6-3.dll\
	$(BIN)libepoxy-0.dll\
	$(BIN)libexpat-1.dll\
	$(BIN)libffi-6.dll\
	$(BIN)libfontconfig-1.dll\
	$(BIN)libfreetype-6.dll\
	$(BIN)libgcc_s_*.dll\
	$(BIN)libgdk_pixbuf-2.0-0.dll\
	$(BIN)libgdk-3-0.dll\
	$(BIN)libgio-2.0-0.dll\
	$(BIN)libglib-2.0-0.dll\
	$(BIN)libgmodule-2.0-0.dll\
	$(BIN)libgobject-2.0-0.dll\
	$(BIN)libgraphite2.dll\
	$(BIN)libgsl-19.dll\
	$(BIN)libgslcblas-0.dll\
	$(BIN)libgthread-2.0-0.dll\
	$(BIN)libgtk-3-0.dll\
	$(BIN)libharfbuzz-0.dll\
	$(BIN)libiconv-2.dll\
	$(BIN)libintl-8.dll\
	$(BIN)libjson-glib-1.0-0.dll\
	$(BIN)liblzma-5.dll\
	$(BIN)libpango-1.0-0.dll\
	$(BIN)libpangocairo-1.0-0.dll\
	$(BIN)libpangoft2-1.0-0.dll\
	$(BIN)libpangowin32-1.0-0.dll\
	$(BIN)libpcre-1.dll\
	$(BIN)libpixman-1-0.dll\
	$(BIN)libpng16-16.dll\
	$(BIN)librsvg-2-2.dll\
	$(BIN)libstdc++-6.dll\
	$(BIN)libwinpthread-1.dll\
	$(BIN)libxml2-2.dll\
	$(BIN)zlib1.dll
GDKPIXBUF = lib/gdk-pixbuf-2.0/2.10.0/
SHARE = @PREFIX@/share/
LOCALE = $(SHARE)locale/
MODE = $(LOCALE)de/LC_MESSAGES/gtk30.mo
MOES = $(LOCALE)es/LC_MESSAGES/gtk30.mo
MOFR = $(LOCALE)fr/LC_MESSAGES/gtk30.mo
MOGB = $(LOCALE)en_GB/LC_MESSAGES/gtk30.mo
MO = $(MOGB) $(MOES) $(MOFR)
WINLIBS = atk bzip2 cairo libepoxy expat libffi fontconfig freetype gcc \
	  gdk-pixbuf2 gtk3 glib2 graphite2 gsl harfbuzz libiconv gettext \
	  json-glib xz pango pcre pixman libpng libxml2 zlib librsvg libcroco
TT1 = tests/test1/
TT2 = tests/test2/
TT3 = tests/test3/
TT4 = tests/test4/
TT5 = tests/test5/
TACKLEY = tests/testAckley/
TSPHERE = tests/testSphere/
TBOOTH = tests/testBooth/
TROSENBROCK = tests/testRosenbrock/
TEASOM = tests/testEasom/
TBEALE = tests/testBeale/

windist: mpcotool.exe $(DLL) $(MO)
	$(shell if test -d @WIN@; then rm -rf @WIN@; fi)
	mkdir -p @WIN@/bin/locales \
		@WIN@/share/locale \
		@WIN@/share/locale/{de,en_GB,es,fr}/LC_MESSAGES \
		@WIN@/share/glib-2.0/schemas @WIN@/$(GDKPIXBUF)loaders @WIN@/src
	cp *.exe *.dll $(DLL) @WIN@/bin
	cd ..; cp --parents tests/*/*{.exe,.exp,.tmp,win.xml} @PACKAGE_VERSION@/@WIN@
	cd ..; cp --parents manuals/*.pdf @PACKAGE_VERSION@/@WIN@
	cp @PREFIX@/$(GDKPIXBUF)loaders.cache @WIN@/$(GDKPIXBUF)
	cp @PREFIX@/$(GDKPIXBUF)loaders/*.dll @WIN@/$(GDKPIXBUF)loaders
	strip @WIN@/bin/*.{exe,dll} @WIN@/tests/*/*.exe \
		@WIN@/$(GDKPIXBUF)loaders/*.dll
	cd locales; cp --parents {$(ES),$(FR)}mpcotool.mo ../@WIN@/bin/locales
	cp $(SHARE)glib-2.0/schemas/gschema{.dtd,s.compiled} \
		@WIN@/share/glib-2.0/schemas
	cd @WIN@/share; cp -r $(SHARE)icons .
	cd @WIN@/share/locale; cp $(MOGB) $(GB); cp $(MOES) $(ES); \
		cp $(MOFR) $(FR); cp $(MODE) $(DE); ln -s en_GB en_GB@UTF8; \
		ln -s es es_ES@UTF8;
	cd ..; zip mpcotool-check-errors check_errors/*.xml
	mv ../mpcotool-check-errors.zip @WIN@/src
	cd ..; zip mpcotool-tests-@WIN@ $(TT1)*.exe $(TT1)*.c $(TT1)*.in \
		$(TT1)*.exp $(TT1)*.tmp $(TT1)test*.xml $(TT1)test*.json \
		$(TT2)*.exe $(TT2)*.dll $(TT2)*.c $(TT2)*.in $(TT2)*.exp $(TT2)*.tmp \
			$(TT2)test*.xml \
		$(TT3)*.exe $(TT3)*.dll $(TT3)*.c $(TT3)*.in $(TT3)*.exp $(TT3)*.tmp \
			$(TT3)test*.xml \
		$(TT4)*.exe $(TT4)*.dll $(TT4)*.c $(TT4)*.in $(TT4)*.exp $(TT4)*.tmp \
			$(TT4)test*.xml \
		$(TT5)*.exe $(TT5)*.c $(TT5)*.in $(TT5)*.exp $(TT5)*.tmp \
			$(TT5)test*.xml \
		$(TACKLEY)*.exe $(TACKLEY)*.c $(TACKLEY)*.in $(TACKLEY)*.tmp \
		$(TBEALE)*.exe $(TBEALE)*.c $(TBEALE)*.in $(TBEALE)*.tmp \
		$(TBOOTH)*.exe $(TBOOTH)*.c $(TBOOTH)*.in $(TBOOTH)*.tmp \
		$(TEASOM)*.exe $(TEASOM)*.c $(TEASOM)*.in $(TEASOM)*.tmp \
		$(TROSENBROCK)*.exe $(TROSENBROCK)*.c $(TROSENBROCK)*.in \
			$(TROSENBROCK)*.tmp \
		$(TSPHERE)*.exe $(TSPHERE)*.c $(TSPHERE)*.in $(TSPHERE)*.tmp
	mv ../mpcotool-tests-@WIN@.zip @WIN@/src
	zip mpcotool-sources-@PACKAGE_VERSION@.zip *.c *.h *.in *.ac *.ico *.rc \
		Doxyfile
	mv mpcotool-sources-@PACKAGE_VERSION@.zip @WIN@/src
	zip genetic-sources-2.2.2.zip genetic/*.c genetic/*.h
	mv genetic-sources-2.2.2.zip @WIN@/src
	zip @WIN@/src/mpcotool-manuals ../manuals/*.pdf
	zip -r @WIN@/src/mpcotool-binaries-@WIN@-@PACKAGE_VERSION@.zip @WIN@/bin \
		@WIN@/lib @WIN@/share
	cd @WIN@/src; perl ../../fetch.pl $(WINLIBS)
